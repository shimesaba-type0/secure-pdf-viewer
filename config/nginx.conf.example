# Secure PDF Viewer - Nginx Configuration Example
# Cloudflareアクセス制限付きリバースプロキシ設定
#
# 使用方法:
# 1. このファイルを /etc/nginx/sites-available/secure-pdf-viewer にコピー
# 2. your-domain.com を実際のドメイン名に変更
# 3. SSL証明書のパスを実際のパスに変更
# 4. sudo ln -s /etc/nginx/sites-available/secure-pdf-viewer /etc/nginx/sites-enabled/
# 5. sudo nginx -t && sudo systemctl reload nginx

# Cloudflare IP範囲の定義
# 最新のIP範囲は https://www.cloudflare.com/ips/ で確認してください
# IPv4
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 104.16.0.0/13;
set_real_ip_from 104.24.0.0/14;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 173.245.48.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;

# IPv6 (必要に応じて)
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2c0f:f248::/32;
set_real_ip_from 2a06:98c0::/29;

# Real IPヘッダーの指定（Cloudflare環境）
real_ip_header CF-Connecting-IP;
real_ip_recursive on;

# アクセス許可IP範囲の定義
geo $is_allowed_ip {
    default 0;  # デフォルトは拒否
    
    # Cloudflare IP範囲（IPv4）
    103.21.244.0/22 1;
    103.22.200.0/22 1;
    103.31.4.0/22 1;
    104.16.0.0/13 1;
    104.24.0.0/14 1;
    108.162.192.0/18 1;
    131.0.72.0/22 1;
    141.101.64.0/18 1;
    162.158.0.0/15 1;
    172.64.0.0/13 1;
    173.245.48.0/20 1;
    188.114.96.0/20 1;
    190.93.240.0/20 1;
    197.234.240.0/22 1;
    198.41.128.0/17 1;
    
    # Cloudflare IP範囲（IPv6） - 必要に応じて
    2400:cb00::/32 1;
    2606:4700::/32 1;
    2803:f800::/32 1;
    2405:b500::/32 1;
    2405:8100::/32 1;
    2c0f:f248::/32 1;
    2a06:98c0::/29 1;
    
    # ローカルネットワーク（開発・管理用）
    127.0.0.0/8 1;        # localhost
    10.0.0.0/8 1;         # プライベートネットワーク A
    172.16.0.0/12 1;      # プライベートネットワーク B
    192.168.0.0/16 1;     # プライベートネットワーク C
    ::1/128 1;            # IPv6 localhost
    fc00::/7 1;           # IPv6 Unique Local Address
}

# レート制限設定
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=60r/m;

# HTTP -> HTTPS リダイレクト
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com;  # 実際のドメイン名に変更
    
    return 301 https://$server_name$request_uri;
}

# メインサーバー設定（HTTPS）
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com;  # 実際のドメイン名に変更
    
    # SSL証明書設定（実際のパスに変更）
    ssl_certificate /etc/ssl/certs/your-domain.com.crt;
    ssl_private_key /etc/ssl/private/your-domain.com.key;
    
    # SSL設定（Mozilla Modern Configuration）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # CRITICAL: Cloudflare + LocalNet以外のアクセスを完全遮断
    if ($is_allowed_ip = 0) {
        return 444;  # 接続を即座に破棄（ログなし）
    }
    
    # ログ設定
    access_log /var/log/nginx/secure-pdf-viewer-access.log combined;
    error_log /var/log/nginx/secure-pdf-viewer-error.log warn;
    
    # アップロードサイズ制限
    client_max_body_size 100M;
    
    # タイムアウト設定
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # 静的ファイルの直接配信
    location /static/ {
        alias /app/static/;  # アプリケーションの静的ファイルパスに調整
        expires 1h;
        add_header Cache-Control "public, immutable";
        
        # PDF直リンク防止: PDFファイルへの直接アクセス禁止
        location ~* \.pdf$ {
            return 404;
        }
    }
    
    # 認証関連エンドポイント（厳しいレート制限）
    location ~ ^/(auth/login|auth/verify-otp) {
        limit_req zone=login burst=3 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:5000;  # アプリケーションのポートに調整
        include /etc/nginx/proxy_params;
    }
    
    # API エンドポイント
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:5000;
        include /etc/nginx/proxy_params;
    }
    
    # セキュアPDF配信（最重要: PDF直リンクを完全制限）
    location /secure/ {
        limit_req zone=general burst=20 nodelay;
        limit_req_status 429;
        
        # Cloudflareキャッシュを無効化
        add_header Cache-Control "private, no-cache, no-store, must-revalidate";
        add_header CF-Cache-Status "BYPASS";
        
        proxy_pass http://127.0.0.1:5000;
        include /etc/nginx/proxy_params;
        
        # 大きなPDFファイル対応
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # メインアプリケーション
    location / {
        limit_req zone=general burst=30 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:5000;
        include /etc/nginx/proxy_params;
        
        # SSE（Server-Sent Events）サポート
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
    }
    
    # セキュリティ: 機密ファイルへのアクセス禁止
    location ~ /\. {
        deny all;
        return 404;
    }
    
    location ~ \.(env|py|pyc|db)$ {
        deny all;
        return 404;
    }
    
    # ヘルスチェック用エンドポイント
    location = /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# 不正アクセス処理用（デフォルトサーバー）
# Cloudflare以外からの直接アクセスを即座に遮断
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    
    server_name _;
    
    # 自己署名証明書でも可（不正アクセス用）
    ssl_certificate /etc/ssl/certs/default.crt;
    ssl_private_key /etc/ssl/private/default.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # ログ設定の選択
    # 【推奨】パフォーマンス重視：ログ無効化
    # - return 444で既に「存在しない」として処理
    # - DDoS攻撃時のディスクI/O負荷を回避
    # - ログ爆弾攻撃（わざとログを大量生成）を無効化
    access_log off;
    error_log /dev/null;
    
    # 【代替】監査要件がある場合：ログ有効化
    # セキュリティ分析や法的要件でログが必要な場合は以下を使用
    # access_log /var/log/nginx/blocked-access.log combined;
    # error_log /var/log/nginx/blocked-error.log warn;
    # 注意：大量攻撃時はlogrotateで適切にローテーションすること
    
    # すべてのリクエストを破棄（無応答で即座切断）
    return 444;
}

# proxy_params の設定例（/etc/nginx/proxy_params がない場合）
# 以下の内容を /etc/nginx/proxy_params として保存するか、
# 各 location ブロックで直接記述してください
#
# proxy_set_header Host $http_host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;

